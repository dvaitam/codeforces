Description:
Mike has a sequence A = [a1, a2, ..., an] of length n. He considers the sequence B = [b1, b2, ..., bn] beautiful if the gcd of all its elements is bigger than 1, i.e. $${ \operatorname* { g c d } } ( b _ { 1 }, b _ { 2 }, \ldots, b _ { n } ) > 1$$.

Mike wants to change his sequence in order to make it beautiful. In one move he can choose an index i (1 ≤ i < n), delete numbers ai, ai + 1 and put numbers ai - ai + 1, ai + ai + 1 in their place instead, in this order. He wants perform as few operations as possible. Find the minimal number of operations to make sequence A beautiful if it's possible, or tell him that it is impossible to do so.

$$\gcd(b_{1},b_{2},\ldots,b_{n})$$ is the biggest non-negative number d such that d divides bi for every i (1 ≤ i ≤ n).

Input Format:
The first line contains a single integer n (2 ≤ n ≤ 100 000) — length of sequence A.

The second line contains n space-separated integers a1, a2, ..., an (1 ≤ ai ≤ 109) — elements of sequence A.

Output Format:
Output on the first line "YES" (without quotes) if it is possible to make sequence A beautiful by performing operations described above, and "NO" (without quotes) otherwise.

If the answer was "YES", output the minimal number of moves needed to make sequence A beautiful.

Note:
In the first example you can simply make one move to obtain sequence [0, 2] with $$\gcd(0, 2) = 2$$.

In the second example the gcd of the sequence is already greater than 1.