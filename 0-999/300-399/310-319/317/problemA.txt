Description:
Let us call a pair of integer numbers m-perfect, if at least one number in the pair is greater than or equal to m. Thus, the pairs (3, 3) and (0, 2) are 2-perfect while the pair (-1, 1) is not.

Two integers x, y are written on the blackboard. It is allowed to erase one of them and replace it with the sum of the numbers, (x + y).

What is the minimum number of such operations one has to perform in order to make the given pair of integers m-perfect?

Input Format:
Single line of the input contains three integers x, y and m ( - 1018 ≤ x, y, m ≤ 1018).

Please, do not use the %lld specifier to read or write 64-bit integers in C++. It is preffered to use the cin, cout streams or the %I64d specifier.

Output Format:
Print the minimum number of operations or "-1" (without quotes), if it is impossible to transform the given pair to the m-perfect one.

Note:
In the first sample the following sequence of operations is suitable: (1, 2) $$\rightarrow$$ (3, 2) $$\rightarrow$$ (5, 2).

In the second sample: (-1, 4) $$\rightarrow$$ (3, 4) $$\rightarrow$$ (7, 4) $$\rightarrow$$ (11, 4) $$\rightarrow$$ (15, 4).

Finally, in the third sample x, y cannot be made positive, hence there is no proper sequence of operations.